The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is a funtion that divide a matrix whit a variable integer.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Normal:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Integer or float:
	>>> matrix_divided([[1, "F", 3], [4, 5, 6]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Div is cero:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

length of de row:
	>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Div diferent of int or float:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "j")
	Traceback (most recent call last):
	TypeError: div must be a number

No argument:
	>>> matrix_divided([[], []],)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

No argument in list:
	>>> matrix_divided([[], []], 2)
	[[], []]

Normal sobre float:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.2)
	[[0.45, 0.91, 1.36], [1.82, 2.27, 2.73]]
